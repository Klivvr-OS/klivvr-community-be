// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  email             String             @unique
  password          String
  firstName         String
  lastName          String
  phone             String?            @unique
  birthdate         DateTime?
  likes             String[]           @default([])
  favoriteClubs     String[]           @default([])
  preferredFoods    String[]           @default([])
  hobbies           String[]           @default([])
  hiringDate        DateTime?
  Role              Role               @default(USER)
  verificationCode  String?
  isVerified        Boolean            @default(false)
  photoURL          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  posts             Post[]      
  resetPasswordCode ResetPasswordCode?
  nominatedUser     KlivvrPickNominee[] @relation("Nominee")
  nominatorUser     KlivvrPickNominee[] @relation("Nominator")
}

enum Role {
  USER
  ADMIN
  PICK_MODERATOR
}

model Post {
  id          Int      @id @default(autoincrement())
  description String
  photoURL    String?
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ResetPasswordCode {
  id        Int      @id @default(autoincrement())
  code      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KlivvrPick {
  id          Int               @id @default(autoincrement())
  name        String
  description String
  link        String
  category    String
  photoURL    String?
  nominee     KlivvrPickNominee @relation(fields: [nomineeId], references: [nomineeId])
  nomineeId   Int
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model KlivvrPickNominee {
  id          Int          @id @default(autoincrement())
  startDate   DateTime     
  endDate     DateTime
  nominee     User         @relation("Nominee", fields: [nomineeId], references: [id])
  nomineeId   Int          @unique
  nominator   User         @relation("Nominator", fields: [nominatorId], references: [id])
  nominatorId Int          
  KlivvrPick  KlivvrPick[]
}
